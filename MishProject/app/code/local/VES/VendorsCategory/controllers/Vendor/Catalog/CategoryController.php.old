<?php
class VES_VendorsCategory_Vendor_Catalog_CategoryController extends VES_Vendors_Controller_Action
{
	protected function _isAllowed()
    {
        return Mage::helper('vendorscategory')->moduleEnable();
    }

    public function preDispatch() {
        parent::preDispatch();
    }

    protected function _initCategory()
    {
        $this->_title($this->__('Catalog'))
            ->_title($this->__('Categories'))
            ->_title($this->__('Manage Categories'));

        $categoryId = (int) $this->getRequest()->getParam('id',false);
        $category = Mage::getModel('vendorscategory/category');

        if ($categoryId) {
            $category->load($categoryId);
        }

        if ($activeTabId = (string) $this->getRequest()->getParam('active_tab_id')) {
            Mage::getSingleton('vendors/session')->setActiveTabId($activeTabId);
        }

        Mage::register('category', $category);
        Mage::register('current_category', $category);
        return $category;
    }


	public function indexAction(){
    	/*$this->loadLayout()
		->_setActiveMenu('catalog')->_title(Mage::helper('vendorscategory')->__('Catalog'))->_title(Mage::helper('vendorscategory')->__('Manage Categories'))
    	->_addBreadcrumb(Mage::helper('vendorscategory')->__('Catalog'), Mage::helper('vendorscategory')->__('Catalog'))
    	->_addBreadcrumb(Mage::helper('vendorscategory')->__('Manage Categories'), Mage::helper('vendorscategory')->__('Manage Categories'));
		$this->renderLayout();*/

        $this->_forward('edit');
	}

    /**
     * Add new category form
     */
    public function addAction()
    {
        Mage::getSingleton('vendors/session')->unsActiveTabId();
        $this->_forward('edit');
    }
	
	public function editAction() {
        $params['_current'] = true;
        $redirect = false;

        $storeId = (int) $this->getRequest()->getParam('store');
        $parentId = (int) $this->getRequest()->getParam('parent');
        $_prevStoreId = Mage::getSingleton('vendors/session')
            ->getLastViewedStore(true);



        /*if (!empty($_prevStoreId) && !$this->getRequest()->getQuery('isAjax')) {
            $params['store'] = $_prevStoreId;
            $redirect = true;
        }*/

        $categoryId = (int) $this->getRequest()->getParam('id');
        $_prevCategoryId = Mage::getSingleton('vendors/session')
            ->getLastEditedCategory(true);


        if ($_prevCategoryId
            && !$this->getRequest()->getQuery('isAjax')
            && !$this->getRequest()->getParam('clear')) {
            // $params['id'] = $_prevCategoryId;
            $this->getRequest()->setParam('id',$_prevCategoryId);
            //$redirect = true;
        }

        if ($redirect) {
            $this->_redirect('*/*/edit', $params);
            return;
        }

        if (!($category = $this->_initCategory(true))) {
            return;
        }

        $this->_title($categoryId ? $category->getName() : $this->__('New Category'));

        /**
         * Check if we have data in session (if duering category save was exceprion)
         */
        $data = Mage::getSingleton('vendors/session')->getCategoryData(true);

        /**
         * Build response for ajax request
         */
        if ($this->getRequest()->getQuery('isAjax')) {
            // prepare breadcrumbs of selected category, if any
            $breadcrumbsPath = $category->getPath();
            if (empty($breadcrumbsPath)) {
                // but if no category, and it is deleted - prepare breadcrumbs from path, saved in session
                $breadcrumbsPath = Mage::getSingleton('vendors/session')->getDeletedPath(true);
                if (!empty($breadcrumbsPath)) {
                    $breadcrumbsPath = explode('/', $breadcrumbsPath);
                    // no need to get parent breadcrumbs if deleting category level 1
                    if (count($breadcrumbsPath) <= 1) {
                        $breadcrumbsPath = '';
                    }
                    else {
                        array_pop($breadcrumbsPath);
                        $breadcrumbsPath = implode('/', $breadcrumbsPath);
                    }
                }
            }

            Mage::log('path'.$breadcrumbsPath);

            Mage::getSingleton('vendors/session')
                ->setLastViewedStore($this->getRequest()->getParam('store'));
            Mage::getSingleton('vendors/session')
                ->setLastEditedCategory($category->getId());
//            $this->_initLayoutMessages('adminhtml/session');
            $this->loadLayout();

            $eventResponse = new Varien_Object(array(
                'content' => $this->getLayout()->getBlock('vendor.category.edit')->getFormHtml()
                    . $this->getLayout()->getBlock('vendor.category.tree')
                        ->getBreadcrumbsJavascript($breadcrumbsPath, 'editingCategoryBreadcrumbs'),
                'messages' => $this->getLayout()->getMessagesBlock()->getGroupedHtml(),
            ));

            $this->getResponse()->setBody(
                Mage::helper('core')->jsonEncode($eventResponse->getData())
            );

            return;
        }

        $this->loadLayout();
        $this->_setActiveMenu('vendorscategory/category');
        $this->getLayout()->getBlock('head')->setCanLoadExtJs(true)
            ->setContainerCssClass('catalog-categories');

        $this->_addBreadcrumb(Mage::helper('catalog')->__('Manage Catalog Categories'),
            Mage::helper('catalog')->__('Manage Categories')
        );

        $block = $this->getLayout()->getBlock('catalog.wysiwyg.js');
        if ($block) {
            $block->setStoreId($storeId);
        }

        $this->renderLayout();
    }
 
	public function newAction() {
		$this->_forward('edit');
	}
 	
	public function saveAction() {
        if (!$category = $this->_initCategory()) {
            return;
        }

        $refreshTree = 'false';
		if ($data = $this->getRequest()->getPost()) {
            if(isset($data['path'])) {
                unset($data['path']);
            }

            Mage::log($category->getData());
            Mage::log($data);
            $category->addData($data);
			    //->setId($this->getRequest()->getParam('id'))
            $category->setVendorId(Mage::getSingleton('vendors/session')->getVendorId());

            if(!$category->getId()) {
                if($parent = $this->getRequest()->getParam('parent')) {
                    $category->setData('parent_category_id',$this->getRequest()->getParam('parent'));
                    $parentCat = Mage::getModel('vendorscategory/category')->load($parent);
                    if($parentCat->getId()) {$category->setData('level',$parentCat->getData('level')+1);}
                } else {
                    $category->setData('parent_category_id','0')->setData('level','0');
                }
            }

			try {
                $category->save();

                if($category->getId()) {
                    //set path for category
                    //if(!$category->getPath()) {
                        $parentCategoryIds = $category->getAllParentCategoryIds($category);
                        $parentCategoryIds = array_reverse($parentCategoryIds);
                        $parentCategoryIds[] = $category->getId();
                        $category->setData('path',implode('/',$parentCategoryIds))->save();
                        Mage::log('test'.implode('/',$parentCategoryIds));
                  //  }
                }
				Mage::getSingleton('vendors/session')->addSuccess(Mage::helper('vendorscategory')->__('Item was successfully saved'));
				//Mage::getSingleton('vendors/session')->setFormData(false);
                $refreshTree = 'true';

            } catch (Exception $e) {
                $this->_getSession()->addError($e->getMessage())
                    ->setCategoryData($data);
                $refreshTree = 'false';
            }
        }
        $url = Mage::helper('adminhtml')->getUrl('*/*/edit', array('_current' => true, 'id' => $category->getId()));
        $this->getResponse()->setBody(
            '<script type="text/javascript">parent.updateContent("' . $url . '", {}, '.$refreshTree.');</script>'
        );
	}
	
	public function deleteAction() {
        if ($id = (int) $this->getRequest()->getParam('id')) {
            try {
                $category = Mage::getModel('vendorscategory/category')->load($id);

                Mage::getSingleton('vendors/session')->setDeletedPath($category->getPath());

                $category->delete();
                Mage::getSingleton('vendors/session')->addSuccess(Mage::helper('catalog')->__('The category has been deleted.'));
            }
            catch (Mage_Core_Exception $e){
                Mage::getSingleton('vendors/session')->addError($e->getMessage());
                $this->getResponse()->setRedirect(Mage::helper('adminhtml')->getUrl('*/*/edit', array('_current'=>true)));
                return;
            }
            catch (Exception $e){
                Mage::getSingleton('vendors/session')->addError(Mage::helper('catalog')->__('An error occurred while trying to delete the category.'));
                $this->getResponse()->setRedirect(Mage::helper('adminhtml')->getUrl('*/*/edit', array('_current'=>true)));
                return;
            }
        }
        $this->getResponse()->setRedirect(Mage::helper('adminhtml')->getUrl('*/*/', array('_current'=>true, 'id'=>null)));
	}
	
	public function massDeleteAction() {
		$categoryIds = explode(',',$this->getRequest()->getParam('vendorscategory'));
		if(!is_array($categoryIds)) {
			Mage::getSingleton('vendors/session')->addError(Mage::helper('adminhtml')->__('Please select category(s)'));
		} else {
			try {
				foreach ($categoryIds as $categoryId) {
					$category = Mage::getModel('vendorscategory/category')->load($categoryId);
					$category->delete();
				}
				Mage::getSingleton('vendors/session')->addSuccess(
				Mage::helper('vendors')->__(
				'Total of %d record(s) were successfully deleted', count($categoryIds)
				)
				);
			} catch (Exception $e) {
				Mage::getSingleton('vendors/session')->addError($e->getMessage());
			}
		}
		$this->_redirect('*/*/index');
	}

    /**
     * Get tree node (Ajax version)
     */
    public function categoriesJsonAction()
    {
        if ($this->getRequest()->getParam('expand_all')) {
            Mage::getSingleton('vendors/session')->setIsTreeWasExpanded(true);
        } else {
            Mage::getSingleton('vendors/session')->setIsTreeWasExpanded(false);
        }
        if ($categoryId = (int) $this->getRequest()->getPost('id')) {
            $this->getRequest()->setParam('id', $categoryId);

            if (!$category = $this->_initCategory()) {
                return;
            }
            $this->getResponse()->setBody(
                $this->getLayout()->createBlock('vendorscategory/vendor_category_tree')
                    ->getTreeJson($category)
            );
        }
    }

    /**
     * Move category action
     */
    public function moveAction()
    {
        $category = $this->_initCategory();
        if (!$category) {
            $this->getResponse()->setBody(Mage::helper('catalog')->__('Category move error'));
            return;
        }
        /**
         * New parent category identifier
         */
        $parentNodeId   = $this->getRequest()->getPost('pid', false);
        /**
         * Category id after which we have put our category
         */
        $prevNodeId     = $this->getRequest()->getPost('aid', false);
        //$category->setData('save_rewrites_history', Mage::helper('catalog')->shouldSaveUrlRewritesHistory());
        try {
            $category->move($parentNodeId, $prevNodeId);
            $this->getResponse()->setBody("SUCCESS");
        }
        catch (Mage_Core_Exception $e) {
            $this->getResponse()->setBody($e->getMessage());
        }
        catch (Exception $e){
            $this->getResponse()->setBody(Mage::helper('catalog')->__('Category move error %s', $e));
            Mage::logException($e);
        }
    }

    /**
     * Build response for refresh input element 'path' in form
     */
    public function refreshPathAction()
    {
        if ($id = (int) $this->getRequest()->getParam('id')) {
            $category = Mage::getModel('vendorscategory/category')->load($id);
            $this->getResponse()->setBody(
                Mage::helper('core')->jsonEncode(array(
                    'id' => $id,
                    'path' => $category->getPath(),
                ))
            );
        }
    }
}