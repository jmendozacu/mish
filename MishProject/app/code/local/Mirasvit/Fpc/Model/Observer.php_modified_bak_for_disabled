<?php
class Mirasvit_Fpc_Model_Observer extends Varien_Debug
{
    public function __construct()
    {
        $this->_processor = Mage::getSingleton('fpc/processor');
        $this->_config    = Mage::getSingleton('fpc/config');
        $this->_isEnabled = Mage::app()->useCache('full_page');
    }


    protected function _getCookie()
    {
        return Mage::getSingleton('fpc/cookie');
    }

    public function isAllowed()
    {
        return $this->_isEnabled;
    }

    /**
     * Clean full page cache
     */
    public function cleanCache($observer)
    {
        if ($observer->getEvent()->getType() == 'fpc') {
            Mirasvit_Fpc_Model_Cache::getCacheInstance()->clean(Mirasvit_Fpc_Model_Processor::CACHE_TAG);
        }

        return $this;
    }

    public function flushCache($observer)
    {
        try {
            $allTypes = Mage::app()->useCache();
            foreach($allTypes as $type => $blah) {
              Mage::app()->getCacheInstance()->cleanType($type);
            }
        } catch (Exception $e) {}
    }

    /**
     * Invalidate full page cache
     */
    public function invalidateCache()
    {
        Mage::getSingleton('adminhtml/session')->addNotice(Mage::helper('fpc')->__('Refresh "Full Page Cache" to apply changes at frontend'));

        return $this;
    }


    public function registerModelTag($observer)
    {
        if (!$this->isAllowed()) {
            return $this;
        }

        $object = $observer->getEvent()->getObject();
        if ($object && $object->getId()) {
            $tags = $object->getCacheIdTags();
            if ($tags) {
                $this->_processor->addRequestTag($tags);
            }
        }

        return $this;
    }

    public function registerProductTags($observer)
    {
        if (!$this->isAllowed()) {
            return $this;
        }

        $object = $observer->getEvent()->getProduct();
        if ($object && $object->getId()) {
            $tags = $object->getCacheIdTags();
            if ($tags) {
                $this->_processor->addRequestTag($tags);
            }
        }
    }

    public function registerCollectionTag($observer)
    {
        if (!$this->isAllowed()) {
            return $this;
        }

        $collection = $observer->getEvent()->getCollection();
        if ($collection) {
            foreach ($collection as $object) {
                $tags = $object->getCacheIdTags();
                if ($tags) {
                    $this->_processor->addRequestTag($tags);
                }
            }
        }

        return $this;
    }

    public function validateDataChanges(Varien_Event_Observer $observer)
    {
        $object = $observer->getEvent()->getObject();
        $object = Mage::getModel('fpc/validator')->checkDataChange($object);
    }

    public function validateDataDelete(Varien_Event_Observer $observer)
    {
        $object = $observer->getEvent()->getObject();
        $object = Mage::getModel('fpc/validator')->checkDataDelete($object);
    }
}