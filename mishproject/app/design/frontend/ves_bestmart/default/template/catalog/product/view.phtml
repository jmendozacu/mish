<?php
/**
 * Magento
 *
 * NOTICE OF LICENSE
 *
 * This source file is subject to the Academic Free License (AFL 3.0)
 * that is bundled with this package in the file LICENSE_AFL.txt.
 * It is also available through the world-wide-web at this URL:
 * http://opensource.org/licenses/afl-3.0.php
 * If you did not receive a copy of the license and are unable to
 * obtain it through the world-wide-web, please send an email
 * to license@magentocommerce.com so we can send you a copy immediately.
 *
 * DISCLAIMER
 *
 * Do not edit or add to this file if you wish to upgrade Magento to newer
 * versions in the future. If you wish to customize Magento for your
 * needs please refer to http://www.magentocommerce.com for more information.
 *
 * @category    design
 * @package     base_default
 * @copyright   Copyright (c) 2013 Magento Inc. (http://www.magentocommerce.com)
 * @license     http://opensource.org/licenses/afl-3.0.php  Academic Free License (AFL 3.0)
 */

/**
 * Product view template
 *
 * @see Mage_Catalog_Block_Product_View
 * @see Mage_Review_Block_Product_View
 */
?>
<?php
    $theme = Mage::helper("ves_tempcp/framework")->getFramework( );
    $themeConfig = $theme->getConfig();

    $default_layout = $themeConfig->get("default_view_layout", "default.phtml");

    $_helper = $this->helper('catalog/output');
    $_product = $this->getProduct();
?>
<?php if ($product_layout_path = Mage::helper("ves_tempcp/framework")->getLayoutPath("view/".$default_layout) ) { ?>

<?php require ($product_layout_path); ?>

<?php } ?>

<?php if($_product->getTypeId() != 'configurable'): ?>

<script type="text/javascript">
	<?php $sym = Mage::app()->getLocale()->currency(Mage::app()->getStore()->getCurrentCurrencyCode())->getSymbol(); ?>
	jQuery(function($){
        // probably you want a custom method in your block for getting a better and safer tierPrices array here
        // for example with formatted prices
		var priceT = $('.price meta[itemprop=price]').attr("content");
        var tierPrices = <?php echo json_encode($_product->getTierPrice()) ?>;
        var getPrice = function(qty){
            qty = Number(qty);
            var i = tierPrices.length;
            while(i--)
            {
                if(qty >= tierPrices[i]['price_qty']){
                    return tierPrices[i]['price'];
                }
            }
            return priceT;
        };
        var updatePrice = function(price){
            //$('.regular-price .price').html(price);
			$('.regular-price .price').html(price.toFixed(2).toString().replace(/\B(?=(\d{3})+(?!\d))/g, ",").replace(',', '@').replace('.', ',').replace('@', '.') + ' <?php echo $sym; ?>');
        };
		
        // you can use more events here if you want a live response while the user is typing
        $('#qty').change(function(){
            var price = getPrice(this.value);
            if(price !== null){
				var total = price * this.value;
				updatePrice(total);
            }
        });
		
		$(document).on('click','.fa-plus',function(){
			
			var price = getPrice($('#qty').val());
			//alert( price);
			if(price !== null){
				var total = price * ($('#qty').val());
				updatePrice(total);
			}
		});
		$(document).on('click','.fa-minus',function(){
			// code here
			if($('#qty').val()>0){
				var price = getPrice($('#qty').val());
				if(price !== null){
					var total = price * ($('#qty').val());
					updatePrice(total);
				}
			}
		});
	});
   
</script>
<?php endif; ?>