<?php
/**
 * @see VES_VendorsCategory_Block_Vendor_Category_Tree
 */
?>
<div class="categories-side-col">
    <div class="content-header">
        <h3 class="icon-head head-categories"><?php echo Mage::helper('catalog')->__('Categories') ?></h3>
        <?php echo $this->getAddSubButtonHtml() ?>
    </div>
    <div class="tree-actions">
        <a href="#" onclick="tree.collapseTree(); return false;"><?php echo Mage::helper('catalog')->__('Collapse All'); ?></a> <span class="separator">|</span> <a href="#" onclick="tree.expandTree(); return false;"><?php echo Mage::helper('catalog')->__('Expand All'); ?></a>
    </div>
    <div class="tree-holder">
        <div id="tree-div" style="width:100%; overflow:auto;"></div>
    </div>
</div>

<script type="text/javascript">
    var smt = <?php echo $this->getResTreeJson() ?>;
    var tree;
    Ext.EventManager.onDocumentReady(function() {
        tree = new Ext.tree.TreePanel('tree-div', {
            animate:false,
            loader: false,
            enableDD:false,
            containerScroll: true,
            //rootUIProvider: Ext.tree.CheckboxNodeUI,
            selModel: new Ext.tree.CheckNodeMultiSelectionModel(),
            rootVisible: false
        });

        //tree.on('check', checkHandler, tree);

        // set the root node
        var root = new Ext.tree.TreeNode({
            text: 'root',
            draggable:false,
            checked:'false',
            id:'__root__'
           // uiProvider: Ext.tree.CheckboxNodeUI
        });

        tree.setRootNode(root);
        bildResourcesTree(root, <?php echo $this->getResTreeJson() ?>);
        tree.addListener('click', categoryClick.createDelegate(this));

        // render the tree
        tree.render();
        // root.expand();
        tree.expandAll();

        //$('role_resources').value = tree.getChecked().join(',');
    });

    function categoryClick(node, e){
        console.log('category click vendors');
        console.log(node);
        var baseUrl = '<?php echo $this->getEditUrl() ?>';
        var urlExt = 'id/'+node.id+'/';
        var url = parseSidUrl(baseUrl, urlExt);

        tree.currentNodeId = node.id;
        if (!<?php echo $this->getUseAjax() ?>) {
            setLocation(url);
            return;
        }
        if (category_info_tabsJsTabs.activeTab) {
            var params = {active_tab_id:category_info_tabsJsTabs.activeTab.id};
        }
        updateContent(url, params);
    };

    function bildResourcesTree(parent, config){
        if (!config) return null;

        if (parent && config && config.length){
            for (var i = 0; i < config.length; i++){
                //config[i].uiProvider = Ext.tree.CheckboxNodeUI;
                var node = new Ext.tree.TreeNode(config[i]);
                parent.appendChild(node);
                if(config[i].children){
                    bildResourcesTree(node, config[i].children);
                }
            }
        }
    }

    function addNew(url)
    {
        if(tree.currentNodeId !== undefined) url+= 'parent/'+tree.currentNodeId;
        else url += '';
        updateContent(url);
    }
</script>
