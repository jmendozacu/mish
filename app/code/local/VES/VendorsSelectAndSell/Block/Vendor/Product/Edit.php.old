<?php

class VES_VendorsSelectAndSell_Block_Vendor_Product_Edit extends VES_VendorsProduct_Block_Vendor_Product_Edit
{
    public function _construct() {
        parent::_construct();
    }
    protected function _prepareLayout()
    {
        parent::_prepareLayout();

        $editBlock = $this->getLayout()->getBlock('product_edit');
        $tabBlock = $this->getLayout()->getBlock('product_tabs');
        $tabsAllow = $this->helper('selectandsell')->getAllowTabForSell();
        $attributeAllow = $this->helper('selectandsell')->getAllowAttributeForSell();

        if($deleteBtn = $editBlock->getChild('delete_button'))
            $editBlock->unsetChild('delete_button');
        if($dupBtn = $editBlock->getChild('duplicate_button'))
            $editBlock->unsetChild('duplicate_button');
        if($backBtn = $editBlock->getChild('back_button'))
            $backBtn->setData('onclick',"setLocation('".Mage::getUrl('*/vendor_selectandsell/select')."')");

        if($saveBtn = $editBlock->getChild('save_button'))
            $saveBtn->setData('onclick',"productForm.submit();")
                ->setData('label',Mage::helper('core')->__('Save Sell Product'));

        if($saveAndEditBtn = $editBlock->getChild('save_and_edit_button'))
            $editBlock->unsetChild('save_and_edit_button');

        if($resetBtn = $editBlock->getChild('reset_button'))
            $editBlock->unsetChild('reset_button');

        $tabBlock->removeTab('categories')
            ->removeTab('related')
            ->removeTab('vendor_categories')
            ->removeTab('customer_options')
            ->removeTab('files')
            ->removeTab('inventory')
        ;
        $product = Mage::registry('product');

        /**
         * set some attribute to null,prepare for new value
         */
        foreach(Mage::helper('selectandsell')->getAllowAttributeForSell() as $code=>$value) {
            if($value == 0) $product->setData($code,'');
        }
        $setId = $product->getAttributeSetId();
        $groupCollection = Mage::getResourceModel('eav/entity_attribute_group_collection')
            ->setAttributeSetFilter($setId)
            ->setSortOrder()
            ->load();

        $allow_attributes = array();
        foreach ($groupCollection as $group) {
            if(!in_array($group->getData('attribute_group_name'), array('Price','Descriptions'))){
                $tabBlock->removeTab('group_'.$group->getId());
            }

            if(true){
                $attributes = $product->getAttributes($group->getId(), true);
                // do not add groups without attributes

                $allow_attr = Mage::helper('selectandsell')->getAllowAttributeForSell();
                foreach ($attributes as $key => $attribute) {
                    if(!in_array($attribute->getData('attribute_code'),array_keys($allow_attr))) {
                        unset($attributes[$key]);
                    }
                    if(in_array($attribute->getData('attribute_code'),array_keys($allow_attr))) {
                        //save in $allow_attributes
                        $allow_attributes[$attribute->getData('attribute_code')] = $attribute;
                    }
                }

                if (count($attributes)==0) {
                    continue;
                }
                if($group->getData('attribute_group_name') == 'General') {
                    $general_attributes = $attributes;
                }
                $tabBlock->setTabData('group_'.$group->getId(),'content',$this->_translateHtml(Mage::app()->getLayout()->createBlock('vendorsproduct/vendor_product_edit_tab_attributes')->setGroup($group)->setGroupAttributes($attributes)->toHtml()));
            }
        }

        //set tab content again for general tab
        foreach($groupCollection as $group) {
            if($group->getData('attribute_group_name') == 'General') {
                $tabBlock->setTabData('group_'.$group->getId(),'content',$this->_translateHtml(Mage::app()->getLayout()->createBlock('vendorsproduct/vendor_product_edit_tab_attributes')->setGroup($group)->setGroupAttributes($general_attributes)->toHtml()));
            }
        }
        if ($setId) {
            if (Mage::app()->getStore()->isCurrentlySecure()) {
                $link_custom = Mage::getUrl('vendors/catalog_product/options', array('_current' => true, '_secure' => true));
            } else {
                $link_custom = Mage::getUrl('vendors/catalog_product/options', array('_current' => true));
            }
            if (!$product->isGrouped()) {
                /*$tabBlock->addTab('customer_options', array(
                    'label' => Mage::helper('catalog')->__('Custom Options'),
                    'url'   => $link_custom,
                    'class' => 'ajax',
                ));*/
            }
        }

        return $this;
    }

}
